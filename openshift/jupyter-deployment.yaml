
apiVersion: apps/v1
kind: Deployment
metadata:
  name: jupyter-notebook
  namespace: l1-app
  labels:
    app: jupyter-notebook
spec:
  replicas: 1
  selector:
    matchLabels:
      app: jupyter-notebook
  template:
    metadata:
      labels:
        app: jupyter-notebook
    spec:
      securityContext:
        runAsUser: 1000
        runAsGroup: 100
        fsGroup: 100
      containers:
      - name: jupyter
        image: jupyter/datascience-notebook:latest
        ports:
        - containerPort: 8888
        env:
        - name: JUPYTER_ENABLE_LAB
          value: "yes"
        - name: JUPYTER_TOKEN
          value: "l1-analysis-token"
        - name: CHOWN_HOME
          value: "yes"
        - name: CHOWN_HOME_OPTS
          value: "-R"
        args:
          - "start-notebook.sh"
          - "--NotebookApp.token=l1-analysis-token"
          - "--NotebookApp.password="
          - "--NotebookApp.allow_origin=*"
          - "--NotebookApp.base_url=/jupyter"
          - "--NotebookApp.ip=0.0.0.0"
          - "--NotebookApp.port=8888"
          - "--NotebookApp.allow_root=True"
        volumeMounts:
        - name: jupyter-data
          mountPath: /home/jovyan/work
        - name: shared-data
          mountPath: /home/jovyan/shared
        resources:
          requests:
            memory: "1Gi"
            cpu: "500m"
          limits:
            memory: "2Gi"
            cpu: "1000m"
      volumes:
      - name: jupyter-data
        persistentVolumeClaim:
          claimName: jupyter-pvc
      - name: shared-data
        persistentVolumeClaim:
          claimName: shared-data-pvc
---
apiVersion: v1
kind: Service
metadata:
  name: jupyter-service
  namespace: l1-app
spec:
  selector:
    app: jupyter-notebook
  ports:
  - protocol: TCP
    port: 8888
    targetPort: 8888
  type: ClusterIP
---
apiVersion: route.openshift.io/v1
kind: Route
metadata:
  name: jupyter-route
  namespace: l1-app
spec:
  to:
    kind: Service
    name: jupyter-service
  port:
    targetPort: 8888
  tls:
    termination: edge
  path: /jupyter
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: jupyter-pvc
  namespace: l1-app
  annotations:
    volume.beta.kubernetes.io/storage-class: "standard-csi"
spec:
  accessModes:
    - ReadWriteOnce
  storageClassName: standard-csi
  volumeMode: Filesystem
  resources:
    requests:
      storage: 5Gi
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: shared-data-pvc
  namespace: l1-app
  annotations:
    volume.beta.kubernetes.io/storage-class: "standard-csi"
spec:
  accessModes:
    - ReadWriteMany
  storageClassName: standard-csi
  volumeMode: Filesystem
  resources:
    requests:
      storage: 10Gi
