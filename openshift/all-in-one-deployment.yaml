---
# Namespace
apiVersion: v1
kind: Namespace
metadata:
  name: l1-app
  labels:
    name: l1-app
    purpose: l1-troubleshooting-platform
---
# Note: Using existing standard-csi StorageClass instead of creating custom one
---
# Jupyter PVCs
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: jupyter-pvc
  namespace: l1-app
  annotations:
    volume.beta.kubernetes.io/storage-class: "standard-csi"
spec:
  accessModes:
    - ReadWriteOnce
  storageClassName: standard-csi
  volumeMode: Filesystem
  resources:
    requests:
      storage: 10Gi
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: shared-data-pvc
  namespace: l1-app
  annotations:
    volume.beta.kubernetes.io/storage-class: "standard-csi"
spec:
  accessModes:
    - ReadWriteMany
  storageClassName: standard-csi
  volumeMode: Filesystem
  resources:
    requests:
      storage: 50Gi
---
# Jupyter Deployment
apiVersion: apps/v1
kind: Deployment
metadata:
  name: jupyter-notebook
  namespace: l1-app
  labels:
    app: jupyter-notebook
spec:
  replicas: 1
  selector:
    matchLabels:
      app: jupyter-notebook
  template:
    metadata:
      labels:
        app: jupyter-notebook
    spec:
      securityContext:
        runAsUser: 1000
        runAsGroup: 100
        fsGroup: 100
      containers:
      - name: jupyter
        image: jupyter/datascience-notebook:latest
        imagePullPolicy: IfNotPresent
        ports:
        - containerPort: 8888
        env:
        - name: JUPYTER_ENABLE_LAB
          value: "yes"
        - name: JUPYTER_TOKEN
          value: "l1-analysis-token"
        - name: CHOWN_HOME
          value: "yes"
        - name: CHOWN_HOME_OPTS
          value: "-R"
        args:
          - "start-notebook.sh"
          - "--NotebookApp.token=l1-analysis-token"
          - "--NotebookApp.password="
          - "--NotebookApp.allow_origin=*"
          - "--NotebookApp.base_url=/jupyter"
          - "--NotebookApp.ip=0.0.0.0"
          - "--NotebookApp.port=8888"
          - "--NotebookApp.allow_root=True"
        volumeMounts:
        - name: jupyter-data
          mountPath: /home/jovyan/work
        - name: shared-data
          mountPath: /home/jovyan/shared
        resources:
          requests:
            memory: "1Gi"
            cpu: "500m"
          limits:
            memory: "2Gi"
            cpu: "1000m"
      volumes:
      - name: jupyter-data
        persistentVolumeClaim:
          claimName: jupyter-pvc
      - name: shared-data
        persistentVolumeClaim:
          claimName: shared-data-pvc
---
# Jupyter Service
apiVersion: v1
kind: Service
metadata:
  name: jupyter-service
  namespace: l1-app
spec:
  selector:
    app: jupyter-notebook
  ports:
  - protocol: TCP
    port: 8888
    targetPort: 8888
  type: ClusterIP
---
# Jupyter Route
apiVersion: route.openshift.io/v1
kind: Route
metadata:
  name: jupyter-route
  namespace: l1-app
spec:
  to:
    kind: Service
    name: jupyter-service
  port:
    targetPort: 8888
  path: /jupyter
  tls:
    termination: edge
---
# ClickHouse PVC
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: clickhouse-pvc
  namespace: l1-app
  annotations:
    volume.beta.kubernetes.io/storage-class: "standard-csi"
spec:
  accessModes:
    - ReadWriteOnce
  storageClassName: standard-csi
  volumeMode: Filesystem
  resources:
    requests:
      storage: 20Gi
---
# ClickHouse Deployment
apiVersion: apps/v1
kind: Deployment
metadata:
  name: clickhouse
  namespace: l1-app
  labels:
    app: clickhouse
spec:
  replicas: 1
  selector:
    matchLabels:
      app: clickhouse
  template:
    metadata:
      labels:
        app: clickhouse
    spec:
      containers:
      - name: clickhouse
        image: clickhouse/clickhouse-server:24.1
        imagePullPolicy: IfNotPresent
        ports:
        - containerPort: 8123
        - containerPort: 9000
        env:
        - name: CLICKHOUSE_DB
          value: "l1_anomaly_detection"
        - name: CLICKHOUSE_USER
          value: "default"
        - name: CLICKHOUSE_PASSWORD
          value: ""
        volumeMounts:
        - name: clickhouse-data
          mountPath: /var/lib/clickhouse
        - name: shared-data
          mountPath: /var/lib/clickhouse/shared
        resources:
          requests:
            memory: "1Gi"
            cpu: "500m"
          limits:
            memory: "4Gi"
            cpu: "2000m"
      volumes:
      - name: clickhouse-data
        persistentVolumeClaim:
          claimName: clickhouse-pvc
      - name: shared-data
        persistentVolumeClaim:
          claimName: shared-data-pvc
---
# ClickHouse Service
apiVersion: v1
kind: Service
metadata:
  name: clickhouse-service
  namespace: l1-app
spec:
  selector:
    app: clickhouse
  ports:
  - name: http
    protocol: TCP
    port: 8123
    targetPort: 8123
  - name: native
    protocol: TCP
    port: 9000
    targetPort: 9000
  type: ClusterIP
---
# ConfigMap
apiVersion: v1
kind: ConfigMap
metadata:
  name: l1-app-config
  namespace: l1-app
data:
  NODE_ENV: "production"
  PORT: "5000"
  CLICKHOUSE_URL: "http://clickhouse-service.l1-app.svc.cluster.local:8123"
  CLICKHOUSE_HOST: "clickhouse-service.l1-app.svc.cluster.local"
  CLICKHOUSE_PORT: "8123"
  CLICKHOUSE_DATABASE: "l1_anomaly_detection"
  CLICKHOUSE_USER: "default"
  CLICKHOUSE_USERNAME: "default"
  CLICKHOUSE_PASSWORD: ""
  TSLAM_REMOTE_HOST: "10.193.0.4"
  TSLAM_REMOTE_PORT: "8080"
  JUPYTER_SERVICE_URL: "http://jupyter-service.l1-app.svc.cluster.local:8888"
---
# Secrets
apiVersion: v1
kind: Secret
metadata:
  name: l1-app-secrets
  namespace: l1-app
type: Opaque
data:
  database_password: ""
  jupyter_token: bDEtYW5hbHlzaXMtdG9rZW4=
---
# L1 Application Deployment
apiVersion: apps/v1
kind: Deployment
metadata:
  name: l1-troubleshooting
  namespace: l1-app
  labels:
    app: l1-troubleshooting
spec:
  replicas: 2
  selector:
    matchLabels:
      app: l1-troubleshooting
  template:
    metadata:
      labels:
        app: l1-troubleshooting
    spec:
      containers:
      - name: l1-app
        image: node:18-alpine
        imagePullPolicy: IfNotPresent
        ports:
        - containerPort: 5000
        env:
        - name: PORT
          value: "5000"
        - name: NODE_ENV
          value: "production"
        - name: CLICKHOUSE_URL
          value: "http://clickhouse-service.l1-app.svc.cluster.local:8123"
        - name: CLICKHOUSE_HOST
          value: "clickhouse-service.l1-app.svc.cluster.local"
        - name: CLICKHOUSE_PORT
          value: "8123"
        - name: CLICKHOUSE_DATABASE
          value: "l1_anomaly_detection"
        - name: CLICKHOUSE_USER
          value: "default"
        - name: CLICKHOUSE_USERNAME
          value: "default"
        - name: CLICKHOUSE_PASSWORD
          value: ""
        - name: TSLAM_REMOTE_HOST
          value: "10.193.0.4"
        - name: TSLAM_REMOTE_PORT
          value: "8080"
        - name: JUPYTER_SERVICE_URL
          value: "http://jupyter-service.l1-app.svc.cluster.local:8888"
        - name: MODEL_PATH
          value: "/app/models/tslam-4b.gguf"
        - name: RHOAI_MODEL_SERVING
          value: "true"
        - name: RHOAI_INFERENCE_ENDPOINT
          value: "http://localhost:8081"
        - name: CUDA_VISIBLE_DEVICES
          value: "0"
        resources:
          requests:
            memory: "1Gi"
            cpu: "500m"
          limits:
            memory: "2Gi"
            cpu: "1000m"
---
# L1 Application Service
apiVersion: v1
kind: Service
metadata:
  name: l1-troubleshooting-service
  namespace: l1-app
spec:
  selector:
    app: l1-troubleshooting
  ports:
  - protocol: TCP
    port: 80
    targetPort: 5000
  type: ClusterIP
---
# L1 Application Route
apiVersion: route.openshift.io/v1
kind: Route
metadata:
  name: l1-troubleshooting-route
  namespace: l1-app
spec:
  to:
    kind: Service
    name: l1-troubleshooting-service
  port:
    targetPort: 5000
  tls:
    termination: edge