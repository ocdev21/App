
---
# Namespace
apiVersion: v1
kind: Namespace
metadata:
  name: l1-app
  labels:
    name: l1-app
    purpose: l1-troubleshooting-platform
---
# ClickHouse PVC
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: clickhouse-pvc
  namespace: l1-app
  annotations:
    volume.beta.kubernetes.io/storage-class: "standard-csi"
spec:
  accessModes:
    - ReadWriteOnce
  storageClassName: standard-csi
  volumeMode: Filesystem
  resources:
    requests:
      storage: 20Gi
---
# ClickHouse ConfigMap for initial configuration
apiVersion: v1
kind: ConfigMap
metadata:
  name: clickhouse-config
  namespace: l1-app
data:
  config.xml: |
    <?xml version="1.0"?>
    <yandex>
        <logger>
            <level>information</level>
            <console>true</console>
        </logger>
        <http_port>9000</http_port>
        <tcp_port>9000</tcp_port>
        <listen_host>0.0.0.0</listen_host>
        <max_connections>4096</max_connections>
        <keep_alive_timeout>3</keep_alive_timeout>
        <max_concurrent_queries>100</max_concurrent_queries>
        <uncompressed_cache_size>8589934592</uncompressed_cache_size>
        <mark_cache_size>5368709120</mark_cache_size>
        <path>/var/lib/clickhouse/</path>
        <tmp_path>/var/lib/clickhouse/tmp/</tmp_path>
        <user_files_path>/var/lib/clickhouse/user_files/</user_files_path>
        <users_config>users.xml</users_config>
        <default_profile>default</default_profile>
        <default_database>default</default_database>
        <timezone>UTC</timezone>
        <mlock_executable>false</mlock_executable>
        <remote_servers incl="clickhouse_remote_servers" />
        <zookeeper incl="zookeeper-servers" optional="true" />
        <macros incl="macros" optional="true" />
        <builtin_dictionaries_reload_interval>3600</builtin_dictionaries_reload_interval>
        <max_session_timeout>3600</max_session_timeout>
        <default_session_timeout>60</default_session_timeout>
        <dictionaries_config>*_dictionary.xml</dictionaries_config>
    </yandex>
  users.xml: |
    <?xml version="1.0"?>
    <yandex>
        <profiles>
            <default>
                <max_memory_usage>10000000000</max_memory_usage>
                <use_uncompressed_cache>0</use_uncompressed_cache>
                <load_balancing>random</load_balancing>
            </default>
        </profiles>
        <users>
            <default>
                <password></password>
                <networks incl="networks" replace="replace">
                    <ip>::/0</ip>
                </networks>
                <profile>default</profile>
                <quota>default</quota>
                <databases>
                    <database>*</database>
                </databases>
            </default>
        </users>
        <quotas>
            <default>
                <interval>
                    <duration>3600</duration>
                    <queries>0</queries>
                    <errors>0</errors>
                    <result_rows>0</result_rows>
                    <read_rows>0</read_rows>
                    <execution_time>0</execution_time>
                </interval>
            </default>
        </quotas>
    </yandex>
---
# ClickHouse Deployment
apiVersion: apps/v1
kind: Deployment
metadata:
  name: clickhouse
  namespace: l1-app
  labels:
    app: clickhouse
spec:
  replicas: 1
  selector:
    matchLabels:
      app: clickhouse
  template:
    metadata:
      labels:
        app: clickhouse
    spec:
      securityContext:
        runAsUser: 101
        runAsGroup: 101
        fsGroup: 101
        runAsNonRoot: true
      containers:
      - name: clickhouse
        image: clickhouse/clickhouse-server:24.1
        imagePullPolicy: IfNotPresent
        securityContext:
          allowPrivilegeEscalation: false
          runAsNonRoot: true
          runAsUser: 101
          runAsGroup: 101
          capabilities:
            drop:
            - ALL
          seccompProfile:
            type: RuntimeDefault
        ports:
        - name: http
          containerPort: 9000
          protocol: TCP
        - name: native
          containerPort: 9000
          protocol: TCP
        env:
        - name: CLICKHOUSE_DB
          value: "l1_anomaly_detection"
        - name: CLICKHOUSE_USER
          value: "default"
        - name: CLICKHOUSE_PASSWORD
          value: ""
        - name: CLICKHOUSE_DEFAULT_ACCESS_MANAGEMENT
          value: "1"
        volumeMounts:
        - name: clickhouse-data
          mountPath: /var/lib/clickhouse
        - name: clickhouse-config
          mountPath: /etc/clickhouse-server/config.xml
          subPath: config.xml
        - name: clickhouse-config
          mountPath: /etc/clickhouse-server/users.xml
          subPath: users.xml
        resources:
          requests:
            memory: "1Gi"
            cpu: "500m"
          limits:
            memory: "4Gi"
            cpu: "2000m"
        livenessProbe:
          httpGet:
            path: /ping
            port: 9000
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 3
        readinessProbe:
          httpGet:
            path: /ping
            port: 9000
          initialDelaySeconds: 5
          periodSeconds: 5
          timeoutSeconds: 3
          successThreshold: 1
          failureThreshold: 3
      volumes:
      - name: clickhouse-data
        persistentVolumeClaim:
          claimName: clickhouse-pvc
      - name: clickhouse-config
        configMap:
          name: clickhouse-config
---
# ClickHouse Service
apiVersion: v1
kind: Service
metadata:
  name: clickhouse-service
  namespace: l1-app
  labels:
    app: clickhouse
spec:
  selector:
    app: clickhouse
  ports:
  - name: http
    protocol: TCP
    port: 9000
    targetPort: 9000
  - name: native
    protocol: TCP
    port: 9000
    targetPort: 9000
  type: ClusterIP
---
# ServiceAccount for ClickHouse (if needed for PodSecurity)
apiVersion: v1
kind: ServiceAccount
metadata:
  name: clickhouse-sa
  namespace: l1-app
---
# Role for ClickHouse ServiceAccount (minimal permissions)
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  namespace: l1-app
  name: clickhouse-role
rules:
- apiGroups: [""]
  resources: ["pods"]
  verbs: ["get", "list"]
---
# RoleBinding for ClickHouse
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: clickhouse-rolebinding
  namespace: l1-app
subjects:
- kind: ServiceAccount
  name: clickhouse-sa
  namespace: l1-app
roleRef:
  kind: Role
  name: clickhouse-role
  apiGroup: rbac.authorization.k8s.io
