# ML Models PVC for .pkl file storage
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: l1-ml-models-pvc
  namespace: l1-app-ai
  labels:
    app: l1-troubleshooting
    component: ml-storage
spec:
  accessModes:
    - ReadWriteOnce  # Single pod read-write access
  resources:
    requests:
      storage: 10Gi  # 10GB storage for ML models + input files
  storageClassName: ""  # Uses default storage class
  volumeMode: Filesystem
---
# L1 Production Pod
apiVersion: v1
kind: Pod
metadata:
  name: l1-prod-app
  namespace: l1-app-ai
  labels:
    app: l1-prod-app
    version: production
spec:
  containers:
  - name: l1-prod-app
    image: image-registry.openshift-image-registry.svc:5000/l1-app-ai/l1-app-production
    ports:
    - containerPort: 5000
      name: http
    envFrom:
    - secretRef:
        name: l1-app-secret
    env:
    - name: CLICKHOUSE_HOST
      value: "clickhouse-clickhouse-single"
    - name: CLICKHOUSE_PORT
      value: "8123"
    - name: CLICKHOUSE_USERNAME
      value: "default"
    - name: CLICKHOUSE_PASSWORD
      value: "defaultpass"
    - name: CLICKHOUSE_DATABASE
      value: "l1_anomaly_detection"
    volumeMounts:
    - name: ml-models-storage
      mountPath: /app/models
    - name: input-files-storage
      mountPath: /app/input_files
  volumes:
  - name: ml-models-storage
    persistentVolumeClaim:
      claimName: l1-ml-models-pvc
    subPath: models
  - name: input-files-storage
    persistentVolumeClaim:
      claimName: l1-ml-models-pvc  
    subPath: input_files
  imagePullSecrets:
  - name: l1-app-secret
---
# L1 Production Service - NodePort
apiVersion: v1
kind: Service
metadata:
  name: l1-prod-app-service
  namespace: l1-app-ai
  labels:
    app: l1-prod-app
    version: production
spec:
  selector:
    app: l1-prod-app
  ports:
  - name: http
    protocol: TCP
    port: 80
    targetPort: 5000
    nodePort: 30542
  type: NodePort
  sessionAffinity: ClientIP
  sessionAffinityConfig:
    clientIP:
      timeoutSeconds: 3600